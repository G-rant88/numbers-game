{"version":3,"sources":["actions/numberGameActions.js","constants/types.js","components/GameLogic/index.js","components/HighScores/index.js","containers/Home/index.js","containers/App/App.js","reducers/numbersGameReducer.js","reducers/index.js","index.js"],"names":["updateNumbers","numbers","type","payload","updateMoves","moves","updateHighscore","score","GameLogic","props","win","setState","checkIfWin","state","empty","indexOf","i","length","last","boxUpdate","number","target","setTimeout","currentNumber","this","em","newy","style","bind","animateBox","dir","bool","pixels","moveBox","document","getElementById","stylee","currentStyle","window","getComputedStyle","marginTop","split","heighty","offsetHeight","widthy","offsetWidth","array","temporaryValue","randomIndex","currentIndex","Math","floor","random","nextProps","gameNumbers","shuffle","className","onClick","highScore","highScores","id","map","index","Number","isInteger","key","React","Component","HighScores","Home","actions","connect","numbersGameReducer","sort","a","b","dispatch","bindActionCreators","gameActions","App","INITIAL_STATE","numberGameApp","combineReducers","action","store","createStore","reducer","ReactDOM","render"],"mappings":"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","file":"static/js/main.505046ad.chunk.js","sourcesContent":["import * as types from '../constants/types'\r\n\r\nexport const updateNumbers = numbers => ({\r\n  type: types.UPDATE_NUMBERS,\r\n  payload: numbers\r\n})\r\n\r\nexport const updateMoves = moves => ({\r\n  type: types.UPDATE_MOVES,\r\n  payload: moves\r\n})\r\n\r\nexport const updateHighscore = score => ({\r\n  type: types.UPDATE_HIGHSCORE,\r\n  payload: score\r\n})","export const UPDATE_NUMBERS = 'UPDATE_NUMBERS';\r\nexport const UPDATE_MOVES = 'UPDATE_MOVES';\r\nexport const UPDATE_HIGHSCORE = 'UPDATE_HIGHSCORE';","import React from 'react'\r\nimport {HighScores} from '../';\r\nimport './styles.css'\r\n\r\nclass GameLogic extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      numbers: [],\r\n      win: \"\",\r\n      moves: 0\r\n    };\r\n  }\r\n\r\n  win = () => {\r\n    this.setState({numbers: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, \"\", 15]})\r\n  }\r\n  \r\n  shuffle(array) {\r\n    this.setState({win: \"\"})\r\n    this.setState({moves: 0})\r\n    let currentIndex = array.length;\r\n    let temporaryValue;\r\n    let randomIndex;\r\n    // While there remain elements to shuffle...\r\n    while (0 !== currentIndex) {\r\n      // Pick a remaining element...\r\n      randomIndex = Math.floor(Math.random() * currentIndex);\r\n      currentIndex -= 1;\r\n      // And swap it with the current element.\r\n      temporaryValue = array[currentIndex];\r\n      array[currentIndex] = array[randomIndex];\r\n      array[randomIndex] = temporaryValue;\r\n    }\r\n  \r\n    this.setState({numbers: array});\r\n  }\r\n\r\n  checkIfWin = () => {\r\n\r\n    let numbers = this.state.numbers;\r\n    let empty = numbers.indexOf(\"\");\r\n    numbers[empty] = 16;\r\n    for (let i = 0; i < numbers.length; i++) {\r\n      if(i === numbers.length - 1 ) {\r\n        let last = numbers.indexOf(16);\r\n        numbers[last] = \"\";\r\n        return true;\r\n      }\r\n      if (numbers[i] < numbers[i + 1]) {\r\n      }\r\n      else {\r\n        let last = numbers.indexOf(16);\r\n        numbers[last] = \"\";\r\n          return false;\r\n      }\r\n    }\r\n  }\r\n\r\n  boxUpdate = (number, target, empty) => {\r\n\r\n    this.setState({moves: this.state.moves + 1})\r\n\r\n    setTimeout(function(){  \r\n      const currentNumber = this.state.numbers.indexOf(number);\r\n      const em = this.state.numbers.indexOf(\"\");\r\n  \r\n      let newy = this.state.numbers;\r\n  \r\n      newy[currentNumber] = \"\";\r\n      newy[em] = number;\r\n      target.style = \"\";\r\n      empty.style = \"\";\r\n      this.setState({numbers: newy})\r\n      if(this.checkIfWin()) {\r\n        this.props.updateHighscore(this.state.moves)\r\n        this.setState({win: `CONGRATS! YOU WON IN ${this.state.moves} MOVES!!`});\r\n      }\r\n    }.bind(this), 0);\r\n\r\n  }\r\n\r\n  animateBox = (target, empty, dir, bool, pixels) => {\r\n    if(bool) {\r\n      target.style = `transform:translate${dir}(${pixels}px);`;\r\n      empty.style = `transform:translate${dir}(-${pixels}px);`;\r\n    }\r\n    else {\r\n      target.style = `transform:translate${dir}(-${pixels}px);`;\r\n      empty.style = `transform:translate${dir}(${pixels}px);`;\r\n    }\r\n  }\r\n\r\n  moveBox = (number) => {\r\n\r\n    let target = document.getElementById(number);\r\n    let empty = document.getElementById(\"empty-box\");\r\n\r\n\r\n    let style = target.currentStyle || window.getComputedStyle(target);\r\n    let stylee = style.marginTop.split(\"px\");\r\n    // MARGIN TOP AND MARGIN BOTTOM MUST BE EQUAL ON ALL BOXES!!!\r\n\r\n    let heighty = target.offsetHeight + stylee[0] * 2;\r\n    let widthy = target.offsetWidth + stylee[0] * 2;\r\n    \r\n    let em = this.state.numbers.indexOf(\"\");\r\n    let currentNumber = this.state.numbers.indexOf(number);\r\n\r\n    if (em - 4 === currentNumber)\r\n    {\r\n      this.animateBox(target, empty, \"Y\", true, heighty);\r\n      this.boxUpdate(number, target, empty);\r\n    }\r\n\r\n    if (em + 4 === currentNumber)\r\n    {\r\n      this.animateBox(target, empty, \"Y\", false, heighty);\r\n      this.boxUpdate(number, target, empty);\r\n    }\r\n\r\n    if (em - 1 === currentNumber)\r\n    {\r\n      this.animateBox(target, empty, \"X\", true, widthy);\r\n      this.boxUpdate(number, target, empty);\r\n    }\r\n\r\n    if (em + 1 === currentNumber)\r\n    {\r\n      this.animateBox(target, empty, \"X\", false, widthy);\r\n      this.boxUpdate(number, target, empty);\r\n    }\r\n  }\r\n\r\n  componentDidMount () {    \r\n    \r\n  }\r\n\r\n  componentDidUpdate(nextProps) {\r\n    const { gameNumbers } = this.props\r\n    if (nextProps.gameNumbers !== gameNumbers) {\r\n      if (gameNumbers) {\r\n        this.shuffle(gameNumbers);\r\n      }\r\n    }\r\n  }\r\n  render() {\r\n    return(\r\n      <div>\r\n        <h1>Numbers Game</h1>\r\n        <div className=\"container\">\r\n          {this.state.win !== '' && \r\n          <div>\r\n            <h2>{this.state.win}</h2>\r\n            <button className=\"newGameBtn\" onClick={()=> {this.shuffle(this.state.numbers)}}>NEW GAME</button>\r\n          </div>\r\n          }\r\n          {this.props.highScore.length > 0 && <HighScores highScores = {this.props.highScore}/>}\r\n          <div className=\"gameContainer\">\r\n          <div className=\"top\">\r\n            <button id=\"reset\" onClick={() => this.shuffle(this.state.numbers)}>Reset</button>\r\n            <h4 className=\"moves\">Moves: {this.state.moves}</h4>\r\n            <button id=\"cheat\" onClick={() => this.win(this.state.numbers)}>Cheat</button>\r\n          </div>\r\n          <div className=\"row\">\r\n            {this.state.numbers.map((number, index) => {   \r\n              return (Number.isInteger(number) ? <div key={index} onClick={() => this.moveBox(number)} id={number} className=\"box\">{number}</div> : <div key={index} id=\"empty-box\" className=\"box\">{number}</div>)\r\n            })}\r\n          </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default GameLogic\r\n","import React from 'react'\r\nimport './styles.css'\r\n\r\nconst HighScores = ({highScores}) =>\r\n  <div className=\"highScore\">\r\n    <h4>High Scores</h4>\r\n    <div>\r\n      {highScores.map((score, index)=> <div key={index} className=\"score\">{score}</div>)}\r\n    </div>\r\n  </div>;\r\n\r\nexport default HighScores\r\n","import React, {Component} from 'react'\r\nimport {bindActionCreators} from 'redux'\r\nimport * as gameActions from '../../actions/numberGameActions'\r\nimport {connect} from 'react-redux'\r\nimport { GameLogic} from '../../components'\r\n\r\nclass Home extends Component {\r\n  componentDidMount() {\r\n    this.props.actions.updateNumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, \"\"])\r\n  }\r\n\r\n  render() {\r\n    const  {actions, numbers, highScore} = this.props;\r\n    return (\r\n      <div className=\"home\">\r\n        <GameLogic updateHighscore = {actions.updateHighscore} updateNumbers={actions.updateNumbers} highScore={highScore} gameNumbers={numbers}/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => ({\r\n    numbers: state.numbersGameReducer.numbers,\r\n    highScore: state.numbersGameReducer.highScore.sort((a,b) => a-b)\r\n  }),\r\n  dispatch => ({\r\n    actions: bindActionCreators(gameActions, dispatch)\r\n  })\r\n)(Home)\r\n","import React from 'react';\r\nimport Home from '../Home';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Home/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import * as types from '../constants/types'\r\n\r\nconst INITIAL_STATE = {\r\n  numbers: [],\r\n  moves: 0,\r\n  highScore:[133, 80],\r\n};\r\n\r\nexport default function (state = INITIAL_STATE, action) {\r\n  switch (action.type) {\r\n    case types.UPDATE_NUMBERS:\r\n      return {\r\n        ...state, numbers: action.payload\r\n      };\r\n    case types.UPDATE_MOVES:\r\n      return {\r\n        ...state, moves: action.payload\r\n      };\r\n    case types.UPDATE_HIGHSCORE:\r\n      return {\r\n        ...state, highScore: [action.payload ,...state.highScore]\r\n      };\r\n    default:\r\n      return state\r\n  }\r\n}","import { combineReducers } from 'redux'\r\nimport numbersGameReducer from './numbersGameReducer'\r\n\r\nconst numberGameApp = combineReducers({\r\n  numbersGameReducer\r\n});\r\n\r\nexport default numberGameApp","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {createStore} from 'redux'\r\nimport {Provider} from 'react-redux'\r\nimport './styles/index.css';\r\nimport App from './containers/App/App';\r\nimport reducer from './reducers'\r\n\r\nconst store = createStore(\r\n  reducer,\r\n);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}